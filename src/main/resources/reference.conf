// Configuration file [HOCON format]

reactive-eventhubs {

  // Connection settings can be retrieved from the Azure portal at https://portal.azure.com
  connection {

    eventHubName = ${?EVENTHUB_NAME}

    eventHubEndpoint = ${?EVENTHUB_ENDPOINT}

    eventHubPartitions = ${?EVENTHUB_PARTITIONS}

    accessPolicy = ${?EVENTHUB_ACCESS_POLICY}

    accessKey = ${?EVENTHUB_ACCESS_KEY}
  }

  streaming {

    consumerGroup = "$Default"

    // How many messages to retrieve on each pull, max is 999
    receiverBatchSize = 999

    // Value expressed as a duration, e.g. 3s, 3000ms, "3 seconds", etc.
    receiverTimeout = 5s

    // Whether to retrieve information about the partitions while streming events from Event Hub
    retrieveRuntimeInfo = false
  }

  checkpointing {

    // Checkpoints frequency (best effort), for each Event hub partition
    // Min: 1 second, Max: 1 minute
    frequency = 15s

    // How many messages to stream before saving the position, for each Event hub partition.
    // Since the stream position is saved in the Source, before the rest of the
    // Graph (Flows/Sinks), this provides a mechanism to replay buffered messages.
    // The value should be greater than receiverBatchSize
    countThreshold = 2000

    // Store a position if its value is older than this amount of time, ignoring the threshold.
    // For instance when the telemetry stops, this will force to write the last offset after some time.
    // Min: 1 second, Max: 1 hour. Value is rounded to seconds.
    timeThreshold = 5min

    storage {

      // Value expressed as a duration, e.g. 3s, 3000ms, "3 seconds", etc.
      rwTimeout = 5s

      // Supported types (not case sensitive): Cassandra, AzureBlob
      backendType = "AzureBlob"

      // If you use the same storage while processing multiple streams, you'll want
      // to use a distinct table/container/path in each job, to to keep state isolated
      namespace = "eventhub-react-checkpoints"

      // com.microsoft.azure.reactiveeventhubs.checkpointing.Backends.AzureBlob
      azureblob {
        // Time allowed for a checkpoint to be written, rounded to seconds (min 15, max 60)
        lease = 15s
        // Whether to use the Azure Storage Emulator
        useEmulator = false
        // Storage credentials
        protocol = "https"
        account = ${?EVENTHUB_CHECKPOINT_ACCOUNT}
        key = ${?EVENTHUB_CHECKPOINT_KEY}
      }

      cassandra {
        cluster = "localhost:9042"
        replicationFactor = 1
        username = ""
        password = ""
      }
    }
  }
}
